<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="users" elementType="Argument">
            <stringProp name="Argument.name">users</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P1" elementType="Argument">
            <stringProp name="Argument.name">P1</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P2" elementType="Argument">
            <stringProp name="Argument.name">P2</stringProp>
            <stringProp name="Argument.value">8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P3" elementType="Argument">
            <stringProp name="Argument.name">P3</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P4" elementType="Argument">
            <stringProp name="Argument.name">P4</stringProp>
            <stringProp name="Argument.value">9</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P5" elementType="Argument">
            <stringProp name="Argument.name">P5</stringProp>
            <stringProp name="Argument.value">4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P6" elementType="Argument">
            <stringProp name="Argument.name">P6</stringProp>
            <stringProp name="Argument.value">8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2535">P7</stringProp>
            <stringProp name="2536">P8</stringProp>
            <stringProp name="2537">P9</stringProp>
            <stringProp name="78447">P10</stringProp>
            <stringProp name="78448">P11</stringProp>
            <stringProp name="78449">P12</stringProp>
            <stringProp name="78450">P13</stringProp>
            <stringProp name="78451">P14</stringProp>
            <stringProp name="78452">P15</stringProp>
            <stringProp name="78453">P16</stringProp>
            <stringProp name="78454">P17</stringProp>
            <stringProp name="78455">P18</stringProp>
            <stringProp name="78456">P19</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1316435287">
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="2622">S1</stringProp>
            <stringProp name="2623">S2</stringProp>
            <stringProp name="2624">S3</stringProp>
            <stringProp name="2625">S4</stringProp>
            <stringProp name="2626">S5</stringProp>
            <stringProp name="2627">S6</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-994548384">
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-732302365">${__Random(0,9)}</stringProp>
              <stringProp name="-731378844">${__Random(1,9)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Config guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Config" testname="ISO8583 Connection Configuration" enabled="true">
          <stringProp name="classname">PostChannel</stringProp>
          <stringProp name="configKey"></stringProp>
          <stringProp name="connectionSelection">connectionSelection.LAST</stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="host">192.168.100.122</stringProp>
          <stringProp name="keyPassword"></stringProp>
          <stringProp name="maxConnections">10000</stringProp>
          <stringProp name="mtiMapping"></stringProp>
          <stringProp name="packager">D:/Sujith/APT_Switch/Performance Testing Workspace/apache-jmeter-5.6.2/bin/pak/postpack.xml</stringProp>
          <stringProp name="port">4003</stringProp>
          <stringProp name="requestListener"></stringProp>
          <boolProp name="reuseConnection">false</boolProp>
          <stringProp name="storePassword"></stringProp>
          <collectionProp name="channelConfig"/>
          <stringProp name="keystore"></stringProp>
          <collectionProp name="muxKeyConfig"/>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Config>
        <hashTree/>
        <nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler guiclass="TestBeanGUI" testclass="nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler" testname="ISO8583 Sampler" enabled="true">
          <stringProp name="configKey"></stringProp>
          <stringProp name="header"></stringProp>
          <stringProp name="trailer"></stringProp>
          <collectionProp name="fields">
            <elementProp name="0" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="0">
              <stringProp name="content">0200</stringProp>
            </elementProp>
            <elementProp name="2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="2">
              <stringProp name="content">${P1}${P2}${P3}${P4}${P5}${P6}${P7}${P8}${P9}${P10}${P11}${P12}${P13}${P14}${P15}${P16}${P17}${P18}${P19}</stringProp>
            </elementProp>
            <elementProp name="3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="3">
              <stringProp name="content">002000</stringProp>
            </elementProp>
            <elementProp name="4" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="4">
              <stringProp name="content">000000000001</stringProp>
            </elementProp>
            <elementProp name="7" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="7">
              <stringProp name="content">0822130035</stringProp>
            </elementProp>
            <elementProp name="11" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="11">
              <stringProp name="content">${S1}${S2}${S3}${S4}${S5}${S6}</stringProp>
            </elementProp>
            <elementProp name="12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="12">
              <stringProp name="content">121745</stringProp>
            </elementProp>
            <elementProp name="13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="13">
              <stringProp name="content">0710</stringProp>
            </elementProp>
            <elementProp name="14" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="14">
              <stringProp name="content">2411</stringProp>
            </elementProp>
            <elementProp name="15" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="15">
              <stringProp name="content">0822</stringProp>
            </elementProp>
            <elementProp name="18" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="18">
              <stringProp name="content">5814</stringProp>
            </elementProp>
            <elementProp name="22" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="22">
              <stringProp name="content">051</stringProp>
            </elementProp>
            <elementProp name="23" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="23">
              <stringProp name="content">000</stringProp>
            </elementProp>
            <elementProp name="25" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="25">
              <stringProp name="content">00</stringProp>
            </elementProp>
            <elementProp name="26" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="26">
              <stringProp name="content">06</stringProp>
            </elementProp>
            <elementProp name="28" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="28">
              <stringProp name="content">C00000000</stringProp>
            </elementProp>
            <elementProp name="30" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="30">
              <stringProp name="content">C00000000</stringProp>
            </elementProp>
            <elementProp name="32" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="32">
              <stringProp name="content">000022512</stringProp>
            </elementProp>
            <elementProp name="33" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="33">
              <stringProp name="content">9000000503</stringProp>
            </elementProp>
            <elementProp name="35" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="35">
              <stringProp name="content">${P1}${P2}${P3}${P4}${P5}${P6}${P7}${P8}${P9}${P10}${P11}${P12}${P13}${P14}${P15}${P16}${P17}${P18}${P19}=24112200083000</stringProp>
            </elementProp>
            <elementProp name="37" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="37">
              <stringProp name="content">000678239734</stringProp>
            </elementProp>
            <elementProp name="40" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="40">
              <stringProp name="content">220</stringProp>
            </elementProp>
            <elementProp name="41" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="41">
              <stringProp name="content">07000074</stringProp>
            </elementProp>
            <elementProp name="42" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="42">
              <stringProp name="content">000000720004108</stringProp>
            </elementProp>
            <elementProp name="43" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="43">
              <stringProp name="content">TRANRED ALIMENTO  4108 CARACAS        VE</stringProp>
            </elementProp>
            <elementProp name="49" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="49">
              <stringProp name="content">928</stringProp>
            </elementProp>
            <elementProp name="52" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="52">
              <stringProp name="content">4fc6368648106e1c</stringProp>
            </elementProp>
            <elementProp name="56" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="56">
              <stringProp name="content">1510</stringProp>
            </elementProp>
            <elementProp name="59" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="59">
              <stringProp name="content">0000000001</stringProp>
            </elementProp>
            <elementProp name="123" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="123">
              <stringProp name="content">510101511336101</stringProp>
            </elementProp>
            <elementProp name="127.2" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.2">
              <stringProp name="content">0000000001</stringProp>
            </elementProp>
            <elementProp name="127.3" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.3">
              <stringProp name="content">PosTermNG   skNg722Dayc 488950488950DebitGroup  </stringProp>
            </elementProp>
            <elementProp name="127.9" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.9">
              <stringProp name="content">      0003Q31003226TRANRED140</stringProp>
            </elementProp>
            <elementProp name="127.12" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.12">
              <stringProp name="content">BVC</stringProp>
            </elementProp>
            <elementProp name="127.13" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.13">
              <stringProp name="content">998620000     862</stringProp>
            </elementProp>
            <elementProp name="127.14" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.14">
              <stringProp name="content">720     </stringProp>
            </elementProp>
            <elementProp name="127.18" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.18">
              <stringProp name="content">0010218923</stringProp>
            </elementProp>
            <elementProp name="127.20" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.20">
              <stringProp name="content">20230710</stringProp>
            </elementProp>
            <elementProp name="127.25" elementType="nz.co.breakpoint.jmeter.iso8583.MessageField" testname="127.25">
              <stringProp name="content">&lt;IccData&gt;&lt;IccRequest&gt;&lt;AmountAuthorized&gt;000000000101&lt;/AmountAuthorized&gt;&lt;AmountOther&gt;000000000000&lt;/AmountOther&gt;&lt;ApplicationIdentifier&gt;A0000000043060&lt;/ApplicationIdentifier&gt;&lt;ApplicationInterchangeProfile&gt;3900&lt;/ApplicationInterchangeProfile&gt;&lt;ApplicationTransactionCounter&gt;091C&lt;/ApplicationTransactionCounter&gt;&lt;Cryptogram&gt;71F48E3330249783&lt;/Cryptogram&gt;&lt;CryptogramInformationData&gt;80&lt;/CryptogramInformationData&gt;&lt;CvmResults&gt;420300&lt;/CvmResults&gt;&lt;InterfaceDeviceSerialNumber&gt;31003226&lt;/InterfaceDeviceSerialNumber&gt;&lt;IssuerApplicationData&gt;0110A000002A0000000000000000000000FF&lt;/IssuerApplicationData&gt;&lt;TerminalApplicationVersionNumber&gt;0001&lt;/TerminalApplicationVersionNumber&gt;&lt;TerminalCapabilities&gt;E0F0E8&lt;/TerminalCapabilities&gt;&lt;TerminalCountryCode&gt;862&lt;/TerminalCountryCode&gt;&lt;TerminalType&gt;21&lt;/TerminalType&gt;&lt;TerminalVerificationResult&gt;0480048000&lt;/TerminalVerificationResult&gt;&lt;TransactionCategoryCode&gt;62&lt;/TransactionCategoryCode&gt;&lt;TransactionCurrencyCode&gt;928&lt;/TransactionCurrencyCode&gt;&lt;TransactionDate&gt;230710&lt;/TransactionDate&gt;&lt;TransactionSequenceCounter&gt;00000004&lt;/TransactionSequenceCounter&gt;&lt;TransactionType&gt;00&lt;/TransactionType&gt;&lt;UnpredictableNumber&gt;E6C0B93A&lt;/UnpredictableNumber&gt;&lt;/IccRequest&gt;&lt;/IccData&gt;</stringProp>
            </elementProp>
          </collectionProp>
          <intProp name="timeout">45000</intProp>
          <stringProp name="responseCodeField"></stringProp>
          <stringProp name="successResponseCode"></stringProp>
        </nz.co.breakpoint.jmeter.iso8583.ISO8583Sampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
